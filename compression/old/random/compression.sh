#!/bin/env bash
###############################################################################################################################################################################################################
clear;cat /etc/banner
###############################################################################################################################################################################################################
. ../../bin/functions.sh
###############################################################################################################################################################################################################
RONDOM=`cat /dev/random | tr -cd '0-1' | fold -w 1024 | head -n 1`
COUNT=0
CACHE=""
ORGANIZED=""
#IFS=""
for i in `echo ${RONDOM} | grep -o .`;do
  CACHE+=${i}
  ((COUNT++))
  if [[ ${COUNT} == 8 ]];then
    TEMP=`int ${CACHE}`
    if [[ ${#TEMP} == 1 ]];then ORGANIZED+="00";fi
    if [[ ${#TEMP} == 2 ]];then ORGANIZED+="0";fi
    ORGANIZED+="${TEMP}"
    CACHE=""
    COUNT=0
  fi
done
echo "###############################"
echo "RANDOM( ${#RONDOM} ): ${RONDOM}"
echo "###############################"
echo "ORGANIZED( ${#ORGANIZED} ): ${ORGANIZED}"
echo "###############################"
###############################################################################################################################################################################################################
BLOATED=""
for i in `echo ${ORGANIZED} | grep -o .`;do
  BLOATED+=`binary ${i}`
done
echo "BLOATED( ${#BLOATED} ): ${BLOATED}"
echo "###############################"
###############################################################################################################################################################################################################
CACHE=""
COUNT=0
NEXT=""
NEXT_BINARY=""
LENGTH=0
for i in `echo ${BLOATED} | grep -o .`;do
  if [[ ${i} == 0 ]];then
    ((LENGTH++))
  fi
  if [[ ${i} == 1 ]];then
    if [[ ${LENGTH} == 1 ]];then
      NEXT+="0"
      NEXT+="1"
      NEXT_BINARY+=`binary 0`
      NEXT_BINARY+=`binary 1`
    elif [[ ${LENGTH} -gt 1 ]];then
      NEXT+="${LENGTH}"
      NEXT+="${i}"
      NEXT_BINARY+=`binary ${LENGTH}`
      NEXT_BINARY+=`binary ${i}`
      LENGTH=0
    else
      NEXT+="${i}" # if theres no length just add the 1...
    fi
  fi
done
echo "NEXT(${#NEXT}): ${NEXT}"
echo "###############################"
echo "NEXT_BINARY(${#NEXT_BINARY}): ${NEXT_BINARY}"
###############################################################################################################################################################################################################

###############################################################################################################################################################################################################
#MAIN... means if this is ever called this is executed and function access is gained? reminds me of embedded loops at uni 
###############################################################################################################################################################################################################

